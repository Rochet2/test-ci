name: merge

on:
  push:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  _master:
    strategy:
      fail-fast: false
      matrix:
        branch: [master]
        pch: [ON]
    env:
      BRANCH: ${{ matrix.branch }}
      PCH: ${{ matrix.pch }}

    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2
      with:
        ref: ${{ matrix.branch }}
        fetch-depth: 1
        repository: Rochet2/TrinityCore

    - name: Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -yq libboost-all-dev clang-11
    - name: Setup
      run: |
        mkdir bin
        cd bin
        cmake ../ -DWITH_WARNINGS=0 -DWITH_COREDEBUG=0 -DUSE_COREPCH=$PCH -DUSE_SCRIPTPCH=$PCH -DTOOLS=0 -DSCRIPTS=none -DSERVERS=1 -DNOJEM=0 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="-Werror" -DCMAKE_CXX_FLAGS="-Werror" -DCMAKE_C_FLAGS_DEBUG="-DNDEBUG" -DCMAKE_CXX_FLAGS_DEBUG="-DNDEBUG" -DCMAKE_INSTALL_PREFIX=check_install -DCMAKE_C_COMPILER=clang-11 -DCMAKE_CXX_COMPILER=clang++-11
        cd ..
    - name: Build
      run: |
        cd bin
        make -j 4 -k && make install
    - name: Build DB
      run: |
        cd bin/check_install/bin
        ./worldserver --update-databases-only

  _3-3-5:
    strategy:
      fail-fast: false
      matrix:
        branch: [3.3.5]
        pch: [ON]
    env:
      BRANCH: ${{ matrix.branch }}
      PCH: ${{ matrix.pch }}

    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2
      with:
        ref: ${{ matrix.branch }}
        fetch-depth: 1
        repository: Rochet2/TrinityCore

    - name: Check database
      run: |
        echo "start mysql"
        sudo systemctl start mysql.service
        echo "remove user password"
        mysql -uroot -proot -e 'SET PASSWORD FOR root@localhost="";'
        echo "create databases"
        mysql -uroot -e 'create database test_mysql;'
        mysql -uroot < sql/create/create_mysql.sql
        mysql -uroot auth < sql/base/auth_database.sql
        mysql -uroot characters < sql/base/characters_database.sql
        mysql -uroot world < sql/base/dev/world_database.sql
        echo "run updates"
        chmod +x contrib/check_updates.sh
        ./contrib/check_updates.sh auth 3.3.5 auth localhost
        ./contrib/check_updates.sh characters 3.3.5 characters localhost
        cat sql/updates/world/3.3.5/*.sql | mysql -uroot world
        echo "custom/auth"; cat sql/custom/auth/*.sql | mysql -uroot auth
        echo "custom/characters"; cat sql/custom/characters/*.sql | mysql -uroot characters
        echo "custom/world"; cat sql/custom/world/*.sql | mysql -uroot world

    - name: Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -yq libboost-all-dev g++-8
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-8
    - name: Setup
      run: |
        mkdir bin
        cd bin
        cmake ../ -DWITH_WARNINGS=0 -DWITH_COREDEBUG=0 -DUSE_COREPCH=$PCH -DUSE_SCRIPTPCH=$PCH -DTOOLS=0 -DSCRIPTS=none -DSERVERS=1 -DNOJEM=0 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="-Werror" -DCMAKE_CXX_FLAGS="-Werror" -DCMAKE_C_FLAGS_DEBUG="-DNDEBUG" -DCMAKE_CXX_FLAGS_DEBUG="-DNDEBUG" -DCMAKE_INSTALL_PREFIX=check_install -DBUILD_TESTING=0
        cd ..
    - name: Build
      run: |
        cd bin
        make -j 4 -k && make install
    - name: Build DB
      run: |
        cd bin/check_install/bin
        ./worldserver --update-databases-only